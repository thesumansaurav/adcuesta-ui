{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-wow/esm5/ngx-wow.es5.js"],
  "sourcesContent": ["import { NgModule, Injectable, defineInjectable, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Main module of the library\n */\nvar NgwWowModule = /** @class */function () {\n  function NgwWowModule() {}\n  NgwWowModule.decorators = [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule]\n    }]\n  }];\n  return NgwWowModule;\n}();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Configuration for the NgwWowService service.\n */\nvar\n/**\n* Configuration for the NgwWowService service.\n*/\nNgwWowConfig = /** @class */function () {\n  function NgwWowConfig() {\n    /**\n     * Class name that reveals the hidden box when user scrolls.\n     */\n    this.boxClass = 'wow';\n    /**\n     * Class name that triggers the CSS animations ('animated' by default for the animate.css library)\n     */\n    this.animateClass = 'animated';\n    /**\n     * Define the distance between the bottom of browser viewport and the top of hidden box.\n     * When the user scrolls and reach this distance the hidden box is revealed.\n     */\n    this.offset = 0;\n    /**\n     * Turn on/off WOW.js on mobile devices.\n     */\n    this.mobile = true;\n    /**\n     * Consatantly check for new WOW elements on the page.\n     */\n    this.live = true;\n  }\n  return NgwWowConfig;\n}();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Service to interact with the window object.\n */\nvar WindowService = /** @class */function () {\n  function WindowService() {}\n  Object.defineProperty(WindowService.prototype, \"nativeWindow\", {\n    get:\n    /**\n    * @return {?}\n    */\n    function () {\n      return _window();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  WindowService.decorators = [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }];\n  /** @nocollapse */\n  WindowService.ngInjectableDef = defineInjectable({\n    factory: function WindowService_Factory() {\n      return new WindowService();\n    },\n    token: WindowService,\n    providedIn: \"root\"\n  });\n  return WindowService;\n}();\n/**\n * @return {?}\n */\nfunction _window() {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgwWowService = /** @class */function () {\n  function NgwWowService(windowService) {\n    // Observable  source\n    this.itemRevealedSource = new Subject();\n    // Observable  stream\n    this.itemRevealed$ = this.itemRevealedSource.asObservable();\n    this.window = windowService.nativeWindow;\n  }\n  /**\n   * @param {?=} config\n   * @return {?}\n   */\n  NgwWowService.prototype.init =\n  /**\n  * @param {?=} config\n  * @return {?}\n  */\n  function (config) {\n    var _this = this;\n    if (this.window) {\n      // For Angular Universal suport\n      var /** @type {?} */wowConfig = config || {};\n      // Set callback hook:\n      wowConfig.callback = function () {\n        return _this.itemRevealedSource.next();\n      };\n      // Initializes the library\n      new WOW(wowConfig).init();\n    }\n  };\n  NgwWowService.decorators = [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }];\n  /** @nocollapse */\n  NgwWowService.ctorParameters = function () {\n    return [{\n      type: WindowService\n    }];\n  };\n  /** @nocollapse */\n  NgwWowService.ngInjectableDef = defineInjectable({\n    factory: function NgwWowService_Factory() {\n      return new NgwWowService(inject(WindowService));\n    },\n    token: NgwWowService,\n    providedIn: \"root\"\n  });\n  return NgwWowService;\n}();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { NgwWowModule, NgwWowConfig, WindowService, NgwWowService };\n"],
  "mappings": ";;;;;;;;;;;;;AAWA,IAAI;AAAA;AAAA,EAA4B,WAAY;AAC1C,aAASA,gBAAe;AAAA,IAAC;AACzB,IAAAA,cAAa,aAAa,CAAC;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,SAAS,CAAC,YAAY;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AACD,WAAOA;AAAA,EACT,EAAE;AAAA;AASF,IAIA;AAAA;AAAA,EAA4B,2BAAY;AACtC,aAASC,gBAAe;AAItB,WAAK,WAAW;AAIhB,WAAK,eAAe;AAKpB,WAAK,SAAS;AAId,WAAK,SAAS;AAId,WAAK,OAAO;AAAA,IACd;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AAcF,IAAI;AAAA;AAAA,EAA6B,WAAY;AAC3C,aAASC,iBAAgB;AAAA,IAAC;AAC1B,WAAO,eAAeA,eAAc,WAAW,gBAAgB;AAAA,MAC7D;AAAA;AAAA;AAAA;AAAA,QAIA,WAAY;AACV,iBAAO,QAAQ;AAAA,QACjB;AAAA;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB,CAAC;AACD,IAAAA,eAAc,aAAa,CAAC;AAAA,MAC1B,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,YAAY;AAAA,MACd,CAAC;AAAA,IACH,CAAC;AAED,IAAAA,eAAc,kBAAkB,iBAAiB;AAAA,MAC/C,SAAS,SAAS,wBAAwB;AACxC,eAAO,IAAIA,eAAc;AAAA,MAC3B;AAAA,MACA,OAAOA;AAAA,MACP,YAAY;AAAA,IACd,CAAC;AACD,WAAOA;AAAA,EACT,EAAE;AAAA;AAIF,SAAS,UAAU;AAEjB,SAAO,OAAO,WAAW,cAAc,SAAS;AAClD;AAMA,IAAI;AAAA;AAAA,EAA6B,WAAY;AAC3C,aAASC,eAAc,eAAe;AAEpC,WAAK,qBAAqB,IAAI,QAAQ;AAEtC,WAAK,gBAAgB,KAAK,mBAAmB,aAAa;AAC1D,WAAK,SAAS,cAAc;AAAA,IAC9B;AAKA,IAAAA,eAAc,UAAU;AAAA;AAAA;AAAA;AAAA,IAKxB,SAAU,QAAQ;AAChB,UAAI,QAAQ;AACZ,UAAI,KAAK,QAAQ;AAEf,YAAoB,YAAY,UAAU,CAAC;AAE3C,kBAAU,WAAW,WAAY;AAC/B,iBAAO,MAAM,mBAAmB,KAAK;AAAA,QACvC;AAEA,YAAI,IAAI,SAAS,EAAE,KAAK;AAAA,MAC1B;AAAA,IACF;AACA,IAAAA,eAAc,aAAa,CAAC;AAAA,MAC1B,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,YAAY;AAAA,MACd,CAAC;AAAA,IACH,CAAC;AAED,IAAAA,eAAc,iBAAiB,WAAY;AACzC,aAAO,CAAC;AAAA,QACN,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAEA,IAAAA,eAAc,kBAAkB,iBAAiB;AAAA,MAC/C,SAAS,SAAS,wBAAwB;AACxC,eAAO,IAAIA,eAAc,OAAO,aAAa,CAAC;AAAA,MAChD;AAAA,MACA,OAAOA;AAAA,MACP,YAAY;AAAA,IACd,CAAC;AACD,WAAOA;AAAA,EACT,EAAE;AAAA;",
  "names": ["NgwWowModule", "NgwWowConfig", "WindowService", "NgwWowService"]
}
